@using SmileChef.ViewModels;
@model ChefViewModel

@{
    ViewData["Title"] = "Home Page";
}

<style>
    a{
        cursor : pointer;
    }
</style>

<div class="text-center">
    <h1 class="display-5">All Recipes for: </h1>
    <p class="fs-3">@Model.ChefName</p>
    <p>Current User Email: @Model.User.Email</p>
</div>

<div class="d-flex flex-row flex-wrap gap-2 p-2">
    @foreach (var recipe in Model.Recipes)
    {
        <div class="card">
            <div class="card-header d-flex align-items-center py-2 gap-1">
                @* <p class="my-1">Recipe:<a class="fw-bold ps-1 text-decoration-none" data-bs-toggle="modal" data-bs-target="#exampleModal@(recipe.RecipeId)">@recipe.Name</a> </p> *@
                <i class="bi bi-apple fs-4 pe-1"></i>

                <span class="my-1">
                    Recipe: 
                </span>
                <span class="fw-bold">@recipe.Name</span>
            </div>
            <div class="card-body">
                <!-- AnchorTag to trigger modal -->
                <a class="fw-bold ps-1 text-decoration-none" data-bs-toggle="modal" data-bs-target="#exampleModal@(recipe.RecipeId)">Instructions</a>
                <ul class="list-group">
                    <!-- Modal: Show Instructions for each Recipe -->
                    <div class="modal fade" id="exampleModal@(recipe.RecipeId)" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered">
                            <div class="modal-content">
                                <div class="modal-header d-flex align-items-center">
                                    <span class="pe-2 fw-light">Instructions:</span><span class="modal-title h5" id="exampleModalLabel">@(recipe.Name)</span>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    @foreach (var instruction in recipe.Instructions)
                                    {
                                        <li class="list-group-item d-flex justify-content-between">
                                            <div>@instruction.Description</div>
                                            @if (instruction.Duration.HasValue)
                                            {
                                                <div>@(instruction.Duration.ToString().Substring(3, 2)) mins</div>
                                            }
                                            else
                                            {
                                                <div>NA</div>
                                            }
                                        </li>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                   
                </ul>
            </div>
        </div>
    }
</div>

