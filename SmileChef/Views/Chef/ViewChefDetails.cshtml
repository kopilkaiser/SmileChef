@using ChefApp.Models.DbModels
@using SmileChef.ViewModels;
@model Chef

@{
    var currentChef = ViewBag.CurrentChef as Chef;

}

<style>
    #chefDetailsContainer {
        background-color: #cecece;
        font-size: 1.5rem;
    }

    #chefImage {
        height: 300px;
        width: 300px;
    }

    #reviewMessagePara{
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
</style>

@* #region ShowSubscriptionModel *@
<div id="subscriptionModal" class="modal fade" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Select Subscription Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="hfPublisherChefId" />
                <p>
                    <label class="form-label" for="selectSubAmount">Amount To Pay:</label>
                    <select class="form-select" id="selectSubAmount">
                        @*  <option value="10.99">£10.99</option>
                        <option value="15.99">£15.99</option> *@
                    </select>
                </p>
                <p>
                    <label class="form-label" for="selectSubType">Subscription Type:</label>
                    <select class="form-select" id="selectSubType">
                        <option value="Weekly" selected>Weekly</option>
                        <option value="Monthly">Monthly</option>
                        <option value="Yearly">Yearly</option>
                    </select>
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button id="btnProcessSubscription" type="button" class="btn btn-primary">Process Subscription</button>
            </div>
        </div>
    </div>
</div>
@* #endregion *@

<div id="chefDetailsContainer" class="container rounded-2">
    <div class="row p-3">
        <h1 class="col-12">@($"{Model.FirstName} {Model.LastName}")</h1>
        <div class="col-12">
            <img id="chefImage" class="img-thumbnail" src="~/images/chef.png" alt="@($"{Model.FirstName} {Model.LastName}") Picture">
        </div>
        <div class="col-12 d-flex align-items-center gap-0 mt-2">
            <span class="pe-2 small">Rating: </span>
            @for (int i = 0; i < Model.Rating; i++)
            {
                @Html.Raw($"<span class=\"fw-bold text-primary\" style=\"height:25px; width:25px; color:black;\">*</span>")
            }
        </div>
        <div id="buttonContainer" class="col-12">
            @if (currentChef.SubscribedTo.FirstOrDefault(c => c.PublisherId == Model.ChefId) != null)
            {
                var subscription = currentChef.SubscribedTo.FirstOrDefault(c => c.PublisherId == Model.ChefId);
                <button class="btn btn-danger btn-sm" id="btnUnsubscribe" data-publisher-chef-id="@subscription.PublisherId" data-subscription-cost="@Model.SubscriptionCost" data-subscription-id="@subscription.SubscriptionId">Unsubscribe</button>
            }
            else
            {
                <button class="btn btn-success btn-sm" id="btnSubscribe" data-subscription-cost="@Model.SubscriptionCost" data-publisher-chef-id="@Model.ChefId">Subscribe</button>
            }
        </div>
    </div>
    <div class="row">
        <hr style="opacity:100%; border-top-color: #FFF; border-top-width: 5px;" />
    </div>
    <div class="row p-3 pt-0">
        <h3>All The Recipes:</h3>
        <div class="col-12">
            <div class="row gap-2 gap-md-0 g-md-3 py-3">
                @if (Model.Recipes.Count > 0)
                {
                    @foreach (var recipe in Model.Recipes)
                    {
                        <div class="col-12 col-md-6 col-lg-4">
                            <div class="card">
                                <div class="card-header">
                                    <p>@(Model.Recipes.IndexOf(recipe) + 1). @recipe.Name</p>
                                </div>
                                <div class="card-body">
                                    @if (recipe.Instructions.Count > 0)
                                    {
                                        <ul>
                                            @for (int i = 0; i < recipe.Instructions.Count(); i++)
                                            {

                                                <li>@recipe.Instructions[i].Description -   @(recipe.Instructions[i].Duration.HasValue ? recipe.Instructions[i].Duration.Value.Minutes.ToString() + " mins" : "NA")</li>
                                            }
                                        </ul>
                                    }
                                    else
                                    {
                                        <p>No Instructions given for this recipe...</p>
                                    }
                                </div>
                                <div class="card-footer p-3">
                                    <p class="border-bottom pb-2" style="border-bottom-color: #cecece !important; border-bottom-width: 2px !important;">Total Reviews: <span class="fw-bold">@recipe.Reviews.Count</span> </p>
                                    @if (recipe.Reviews.Count > 0)
                                    {
                                        <ol style="list-style:lower-roman;">
                                            @for (int i = 0; i < recipe.Reviews.Take(2).Count(); i++)
                                            {
                                                <li>
                                                    <p class="mb-0">@recipe.Reviews[i].Reviewer.FirstName @recipe.Reviews[i].Reviewer.LastName </p>
                                                    <p class="my-0 border-bottom"><span class="small">@recipe.Reviews[i].ReviewDate</span></p>
                                                    <p id="reviewMessagePara">@recipe.Reviews[i].Message</p>
                                                </li>
                                            }
                                        </ol>
                                    }
                                    else
                                    {
                                        <p>No Reviews posted for this recipe...</p>
                                    }

                                    <div><a class="btn btn-outline-dark" asp-action="ViewRecipe" asp-controller="Chef" asp-route-recipeId="@recipe.RecipeId">Show More Details</a></div>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div>No Recipes has been posted yet...</div>
                }
            </div>
        </div>

    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // unsubscribing to chef (Delete Subscription)
            $(document).on('click', '#btnUnsubscribe', function () {
                let publisherChefId = $(this).data('publisher-chef-id');
                let subscriptionId = $(this).data('subscription-id');
                let subscriptionCost = $(this).data('subscription-cost');
                console.log(`Unsubscribing chef with Id: ${publisherChefId}, by deleting subscription id: ${subscriptionId}`);

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("UnsubscribeChef", "Chef")",
                    data: { publisherChefId, subscriptionId, subscriptionCost },
                    success: function (response) {
                        Swal.fire({
                            title: "Unsubscribed",
                            text: "You have Unsubscribed to the Chef",
                            icon: "success"
                        }).then((result) => {
                            $('#btnUnsubscribe').remove();
                            $('#buttonContainer').append(`<button class="btn btn-success btn-sm" id="btnSubscribe" data-subscription-cost="${response.subscriptionCost}" data-publisher-chef-id="${response.publisherChefId}">Subscribe</button>`);
                        });                                                
                    },
                    error: function (xhr, status, error) {

                    }
                });
            });

            // Part 1: Subscribing to the chef (Ready to show SubscriptionModal)
            $(document).on('click', '#btnSubscribe', function () {
                let publisherChefId = $(this).data('publisher-chef-id');
                let subscriptionCost = $(this).data('subscription-cost');
                $('#selectSubAmount').append(`<option value="${subscriptionCost}" selected>£${subscriptionCost}</option>`)
                $('#hfPublisherChefId').val(publisherChefId);
                $('#subscriptionModal').modal('show');
            });

            // Part 2: Process Subscription (Create new Subscription)
            $('#btnProcessSubscription').on('click', function () {
                let subscriptionType = $('#selectSubType').find(':selected').val();
                let subscriptionCost = $('#selectSubAmount').find(':selected').val();
                let publisherChefId = $('#hfPublisherChefId').val();

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("SubscribeChef", "Chef")",
                    data: { publisherChefId, subscriptionCost, subscriptionType },
                    success: function (response) {
                        $('#subscriptionModal').modal('hide');
                        Swal.fire({
                            title : "Subscribed",
                            text : "You have been Subscribed to the Chef",
                            icon : "success"
                        }).then((result) => {
                            $('#btnSubscribe').remove();
                            $('#buttonContainer').append(`<button class="btn btn-danger btn-sm" id="btnUnsubscribe" data-publisher-chef-id="${response.publisherChefId}" data-subscription-cost="${response.subscriptionCost}" data-subscription-id="${response.subscriptionId}">Unsubscribe</button>`);
                        });         
                    },
                    error: function (xhr, status, error) {

                    }
                });

            });
        });
    </script>
}

