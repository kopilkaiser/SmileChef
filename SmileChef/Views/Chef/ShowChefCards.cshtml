@using SmileChef.ViewModels;
@model ChefSubsciptionViewModel


@{
    var currentAction = Url.ActionContext.RouteData.Values["action"].ToString();
}
<style>
    .card-header {
        background: linear-gradient(55deg, crimson, beige 70%);
        color: black;
    }

    .card-footer {
        background: linear-gradient(65deg, crimson, beige 65%);
        color: black;
    }
</style>
<div class="container-md">
    
    @* #region ShowSubscriptionModel *@
    <div id="subscriptionModal" class="modal fade" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Select Subscription Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>
                        <span>Amount To Pay:</span>
                        <select id="selectSubAmount">
                            <option value="5.99" selected>£5.99</option>
                            <option value="10.99">£10.99</option>
                            <option value="15.99">£15.99</option>
                        </select>
                    </p>
                    <p>
                        <span>
                            Subscription Type:
                        </span>
                        <select id="selectSubType">
                            <option value="Weekly" selected>Weekly</option>
                            <option value="Monthly">Monthly</option>
                            <option value="Yearly">Yearly</option>
                        </select>
                    </p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button id="btnProcessSubscription" type="button" class="btn btn-primary">Process Subscription</button>
                </div>
            </div>
        </div>
    </div>
    @* #endregion *@



    @if (Model != null && Model.Chefs.Count > 0)
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-xl-3 gx-3 gy-4 mt-3 pb-4 bg-secondary-subtle rounded-3">

            @foreach (var chef in Model.Chefs)
            {
                <div class="col">
                    <div class="card">
                        <div class="card-header">
                            <div class="row align-items-center">
                                <div class="col-auto">
                                    <img class="img-thumbnail" src="~/images/chef.png" width="90" height="100" alt="@(chef.FirstName + " " + chef.LastName) Picture">
                                </div>
                                <div class="col-auto">
                                    <div class="col-12"><b class="pe-1">Name:</b> @(chef.FirstName + " " + chef.LastName)</div>
                                    <div class="col-12">
                                        <b class="pe-1">Rating:</b>
                                        @for (int i = 0; i < @chef.Rating; i++)
                                        {
                                            @Html.Raw("<b class=\"fs-5\">*</b>")
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <div>Something about this chef <b>IS NICE</b>. He has total @chef.Recipes.Count() recipes.</div>
                        </div>
                        <div class="card-footer">
                            <div>
                                <a class="btn btn-info" asp-action="ViewChefDetails" asp-controller="Chef" asp-route-chefId="@chef.ChefId">View More</a>
                                <a class="btn btn-success" asp-action="ManageSubscription" asp-route-chefId="@chef.ChefId" asp-route-returnUrl="@currentAction">
                                    @{
                                        var isChefSubscribed = Model.CurrentChef.SubscribedTo.FirstOrDefault(s => s.Publisher.ChefId == chef.ChefId);
                                    }
                                    @( isChefSubscribed  == null ? "Subscribe" : "Unsubscribe")
                                </a>
                            </div>
                        </div>
                    </div>
                </div>

            }
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-auto">
                <div class="text-bg-danger fst-italic p-2 rounded-3">No Chefs found. We will need to register new chefs</div>
            </div>
        </div>
    }
</div>


@section Scripts{
    <script>
        $(document).ready(function () {

            // #region Handling unsubscribing pop-up message
            let showUnsubscribedMessage = "@ViewBag.ShowUnsubscribedMessage".toLowerCase() === "true";
            if (showUnsubscribedMessage) {
                Swal.fire({
                    title: "Unsubscribed",
                    text: "You have successfully unsubscribed the chef",
                    icon: "success"
                })
            }
            // #endregion

            let showModal = @(ViewBag.ShowSubscriptionModal.ToString().ToLower());
            console.log("show subscription modal: " + showModal)
            if (showModal) {
                $('#subscriptionModal').modal('show');
            }

            $('#btnProcessSubscription').click(function () {
                let subAmount = $('#selectSubAmount').val();
                let subType = $('#selectSubType').val();
                let urlLink = '@Url.ActionLink("ProcessSubscription", "Chef")';
                console.log($`urlLink being posted: ${urlLink}`);
                let dataObj = {
                    subAmount : subAmount,
                    subType : subType
                }
                $.ajax({
                    type: "POST",
                    url: urlLink,
                    //data: JSON.stringify({ someValue : "Hello World", givenAge : 55}),
                    data: JSON.stringify(dataObj),
                    contentType: "application/json", // This needs to be set correctly
                    dataType: "json", // or "json" depending on what response you expect
                    success: function (response) {
                        if (response.success) {
                            $('#subscriptionModal').modal('hide');
                            Swal.fire({
                                title: "Subscribed",
                                text: "You have successfully subscribed to the chef",
                                icon: "success"
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    console.log(`window.location.protocol: ${window.location.protocol}//`);
                                    console.log(`window.location.host: ${window.location.host}`);
                                    console.log(`window.location.pathname: ${window.location.pathname}`);
                                    console.log(`window.location.search: ${window.location.search}`);
                                    console.log(`window.location.hash: ${window.location.hash}`);
                                    window.location.href = window.location.pathname;
                                }
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        var errorMessage = xhr.status + ': ' + xhr.statusText;
                        console.log('Error - ' + errorMessage);
                        Swal.fire({
                            title: "Error Occurred",
                            text: errorMessage,
                            icon: "error"
                        });
                    }
                });
            })
        });
    </script>
}
