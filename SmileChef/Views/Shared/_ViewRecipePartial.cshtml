@using ChefApp.Models.DbModels
@using SmileChef.Models.DbModels
@using SmileChef.ViewModels;
@model Recipe
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

<style>
    #addReviewForm textarea:focus{
        outline: none;
        box-shadow: none;
        border-color: #dee2e6;
    }
</style>

<div class="container-md">
    <div class="row mx-auto justify-content-lg-center">
        <div class="col-lg-6 bg-white border border-2 p-2 rounded-2">
            <img class="img-fluid" src="~/images/recipe1.jpeg" alt="@Model.Name" style="height: 400px; width: 100%; object-fit:cover;" />
        </div>
    </div>
    <div class="bg-body-tertiary my-2 p-2">
        <div class="row mb-2 gy-2 align-items-center">
            <span class="col-auto">Recipe Type: <b class="fw-semibold">@Model.RecipeType</b></span>
            @if (Model is PremiumRecipe premiumRecipe)
            {
                <span class="col-auto">Price: <b class="fw-semibold">@premiumRecipe.Price</b></span>
                <div class="col-12 col-sm-auto ms-sm-auto ms-xl-0">
                    <a class="btn btn-primary anchorCartButton" href="javascript:void(0)" data-recipe-name="@premiumRecipe.Name" data-recipe-price="@premiumRecipe.Price" data-recipe-id="@premiumRecipe.RecipeId" onclick="showQuantityModal(this)">Add to Cart</a>
                </div>
            }
        </div>
        <p>Name: <b class="fw-semibold">@Model.Name</b></p>
        <p>Publisher: <b class="fw-semibold">@Model.Chef.FirstName @Model.Chef.LastName</b></p>
    </div>
    <div class="bg-body-tertiary mb-2 p-2">
        <p class="fs-5 border-bottom border-3 border-secondary">Instructions</p>
        @if (Model.Instructions.Count == 0)
        {
            <p>No Instructions given...</p>
        }
        else
        {
            <ol class="list-group">
                @foreach (var i in Model.Instructions)
                {
                    <li class="list-group-item">
                        <div class="row">
                            <span class="col-auto col-md-4">@(Model.Instructions.IndexOf(i) + 1). @i.Description</span>
                            <b class="col-auto">@(i.Duration.HasValue ? i.Duration.Value.Minutes.ToString() + " mins" : "NA")</b>
                        </div>
                    </li>
                }
            </ol>
        }
    </div>
    <div id="addReviewContainer" class="mb-2">
        <form id="addReviewForm">
            <input type="hidden" name="recipeId" value="@Model.RecipeId" />
            <input type="hidden" name="chefId" value="@ViewBag.CurrentChefId" />
            <div class="mb-3">
                <label for="reviewMessage" class="form-label">Add your Review</label>
                <textarea class="form-control" id="reviewMessage" name="reviewMessage" placeholder="Enter your review message here..." rows="4" style="resize: none;"></textarea>
            </div>
            <div><button class="btn btn-success" type="submit">Post Review</button></div>
        </form>
    </div>
    <div id="reviewsContainer" class="bg-body-tertiary mb-2 p-2">
        @await Html.PartialAsync("_ViewRecipeReviews", Model.Reviews)
    </div> 

    @section Scripts {
        <script>
            // #region Add Review to Recipe
            $(document).ready(function () {
                /*
                $(document).on('submit', '#addReviewForm', function () {
                    event.preventDefault();

                    var formData = $(this).serialize();
                    $.ajax({
                        type: "POST",
                        url: "/Chef/AddReview",
                        contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                        dataType: "html",
                        data: formData,
                        success: function(response){
                            $('#reviewMessage').val('');
                            $('#reviewsContainer').html(response);
                            Swal.fire({
                                title : "",
                                text : "Your Review has been posted successfully",
                                icon : "success"
                            })
                        },
                        error: function (xhr, status, error) {
                            var errorMessage = xhr.status + ': ' + xhr.statusText;
                            console.log('Error - ' + errorMessage);
                            Swal.fire({
                                title: "Error Occurred",
                                text: errorMessage,
                                icon: "error"
                            });
                        }
                    });
                })
                */
            });
            // #endregion
        </script>
    }
