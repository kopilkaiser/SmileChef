@using SmileChef.ViewModels
@model ChefViewModel

<style>
    .card-header{
        background: #0F2027; /* fallback for old browsers */
        background: -webkit-linear-gradient(to left, #2C5364, #203A43, #0F2027); /* Chrome 10-25, Safari 5.1-6 */
        background: linear-gradient(to left, #2C5364, #203A43, #0F2027); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
        color: white;
    }

    .card-footer {
        background: #0F2027; /* fallback for old browsers */
        background: -webkit-linear-gradient(to left, #2C5364, #203A43, #0F2027); /* Chrome 10-25, Safari 5.1-6 */
        background: linear-gradient(to left, #2C5364, #203A43, #0F2027); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
        color: white;
    }

    a{
        /* text-decoration: none; */
    }
    a span.recipe-name{
            color: hsl(216, 88%, 70%);
    }
</style>
<div class="container-md">
    @if (Model.Recipes != null && Model.Recipes.Count > 0)
    {
        <div class="row row-cols-1 row-cols-lg-2 gy-3 gx-4 mt-3 pb-4 bg-body-tertiary">
  
            @foreach (var recipe in Model.Recipes)
            {
                <div class="col">
                    <div class="card">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <div class="d-flex align-items-center gap-1 py-2" style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
                                <i class="fa-solid fa-bowl-food fs-4 pe-1 text-primary"></i>
                                <span class="my-1">Recipe:</span>
                                <a asp-action="ViewRecipe" asp-controller="Chef" asp-route-recipeId="@recipe.RecipeId"><span class="fw-bold recipe-name" title="@string.Format("View {0}", recipe.Name)">@recipe.Name</span></a>
                            </div>
                            <div class="d-flex align-items-center gap-2">
                                <a asp-action="AddOrUpdateRecipe" asp-controller="Chef" asp-route-recipeId="@recipe.RecipeId" title="@string.Format("Update {0}", recipe.Name)"><i class="fa-regular fa-pen-to-square text-warning fs-5"></i></a>
                                <a asp-action="DeleteRecipe" asp-controller="Chef" asp-route-id="@recipe.RecipeId" title="@string.Format("Delete {0}", recipe.Name)">
                                    <i class="fa-solid fa-trash-can fs-5 fw-semibold" style="color:hsl(0, 100%,60%);"></i>
                                </a>
                            </div>
                        </div>
                        <div class="card-body">
                            <!-- AnchorTag to trigger modal -->
                            <a class="fw-bold ps-1 text-decoration-none" data-bs-toggle="modal" data-bs-target="#exampleModal@(recipe.RecipeId)">Show Instructions</a>
                            <!-- Modal: Show Instructions for each Recipe -->
                            <div class="modal fade" id="exampleModal@(recipe.RecipeId)" tabindex="-1" aria-labelledby="exampleModalLabel@(recipe.RecipeId)" aria-hidden="true">
                                <div class="modal-dialog modal-dialog-centered">
                                    <div class="modal-content">
                                        <div class="modal-header d-flex align-items-center">
                                            <div class="modal-title">
                                                <span class="pe-1 fw-light h5">Instructions for:</span>
                                                <span class="h5" id="exampleModalLabel@recipe.RecipeId">@recipe.Name</span>
                                            </div>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            <ul class="list-group">
                                                @foreach (var instruction in recipe.Instructions)
                                                {
                                                    <li class="list-group-item d-flex justify-content-between">
                                                        <div><span class="me-2">@(recipe.Instructions.IndexOf(instruction) + 1). </span>@instruction.Description</div>
                                                        <div>@(instruction.Duration.HasValue ? instruction.Duration.Value.Minutes.ToString() + " mins" : "NA")</div>
                                                    </li>
                                                }
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card-footer"></div>
                    </div>
                </div>
            }
       
        
    </div>
    }
    else
    {
        <div class="row">
            <div class="col-auto">
                <div class="text-bg-danger fst-italic p-2 rounded-3">No Recipes found. Add a new recipe</div>
            </div>
        </div>
    }
</div>

